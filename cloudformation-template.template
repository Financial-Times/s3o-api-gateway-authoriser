{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters" : {
    "OriginAPIToken" : {
      "Type" : "String",
      "Description" : "This will be used to connect to the origin API endpoint as x-api-token in the header.",
      "MinLength": "1",
      "AllowedPattern" : ".+",
      "ConstraintDescription" : "Cannot be empty!"
    },
    "StageOriginAPIEndpoint" : {
      "Type": "String",
      "Default": "ft-editorial-lantern-api-stg.herokuapp.com",
      "Description" : "This is the origin API endpoint for Stage",
      "MinLength": "1",
      "AllowedPattern" : ".+",
      "ConstraintDescription" : "Cannot be empty!"
    },
    "ProdOriginAPIEndpoint" : {
      "Type": "String",
      "Default": "ft-editorial-lantern-api.herokuapp.com",
      "Description" : "This is the origin API endpoint for Prod",
      "MinLength": "1",
      "AllowedPattern" : ".+",
      "ConstraintDescription" : "Cannot be empty!"
    },
    "LanternAPIGatewayName" : {
      "Type": "String",
      "Default": "lantern-api-gateway",
      "Description" : "Lantern api gateway Name",
      "MinLength": "1",
      "AllowedPattern" : ".+",
      "ConstraintDescription" : "Cannot be empty!"
    }
  },
  "Resources": {
    "LanternApiGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Lantern API Gateway Stack",
        "Name": {"Ref": "LanternAPIGatewayName"}
      }
    },
    "ProxyResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": { "Fn::GetAtt": ["LanternApiGateway", "RootResourceId"] },
        "PathPart": "{proxy+}",
        "RestApiId": {"Ref": "LanternApiGateway"}
      }
    },
    "TopAnyMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "ResourceId": { "Fn::GetAtt": ["LanternApiGateway", "RootResourceId"] },
        "HttpMethod": "ANY",
        "RequestParameters": {
          "method.request.header.x-api-key": true
        },
        "MethodResponses": [{
          "ResponseModels" : { "application/json":"Empty" },
          "StatusCode" : 200
        }],
        "AuthorizationType": "NONE",
        "ApiKeyRequired": true,
        "Integration": {
          "Type": "HTTP_PROXY",
          "IntegrationHttpMethod": "ANY",
          "Uri": "https://${stageVariables.endpoint}/",
          "RequestParameters": {
            "integration.request.header.Host": "stageVariables.endpoint",
            "integration.request.header.x-api-token": {"Fn::Join": ["", ["'", {"Ref": "OriginAPIToken"}, "'"] ]},
          }
        }
      }
    },
    "TopOptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "ResourceId": { "Fn::GetAtt": ["LanternApiGateway", "RootResourceId"] },
        "HttpMethod": "OPTIONS",
        "RequestParameters": {
          "method.request.header.x-api-key": true,
          "method.request.path.proxy": true
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        }
      }
    },
    "ProxyMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "ResourceId": { "Ref": "ProxyResource" },
        "HttpMethod": "ANY",
        "RequestParameters": {
          "method.request.header.x-api-key": true,
          "method.request.path.proxy": true
        },
        "AuthorizationType": "NONE",
        "ApiKeyRequired": true,
        "Integration": {
          "Type": "HTTP_PROXY",
          "IntegrationHttpMethod": "ANY",
          "Uri": "https://${stageVariables.endpoint}/{proxy}",
          "RequestParameters": {
            "integration.request.header.Host": "stageVariables.endpoint",
            "integration.request.header.x-api-token": {"Fn::Join": ["", ["'", {"Ref": "OriginAPIToken"}, "'"] ]},
            "integration.request.path.proxy": "method.request.path.proxy"
          }
        }
      }
    },
    "OptionsMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "ResourceId": { "Ref": "ProxyResource" },
        "HttpMethod": "OPTIONS",
        "RequestParameters": {
          "method.request.header.x-api-key": true,
          "method.request.path.proxy": true
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        }
      }
    },
    "ProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "StageName": "Prod",
        "Description": "Prod Stage",
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "DeploymentId": {
          "Ref": "ProdDeployment"
        },
        "Variables": {
          "endpoint": {"Ref": "ProdOriginAPIEndpoint"}
        }
      }
    },
    "StageStage": {
      "Type": "AWS::ApiGateway::Stage",
      "DependsOn": ["ProdDeployment", "ProdStage"],
      "Properties": {
        "StageName": "Stage",
        "Description": "Staging Stage",
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "DeploymentId": {
          "Ref": "StageDeployment"
        },
        "Variables": {
          "endpoint": {"Ref": "StageOriginAPIEndpoint"}
        }
      }
    },
    "ProdDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["OptionsMethod", "ProxyMethod"],
      "Properties": {
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "Description": "Prod deployment",
        "StageName": "ProdDeploy"
      }
    },
    "StageDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["OptionsMethod", "ProxyMethod"],
      "Properties": {
        "RestApiId": {
          "Ref": "LanternApiGateway"
        },
        "Description": "Stage deployment",
        "StageName": "StageDeploy"
      }
    },
    "StageApiKey": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": ["StageDeployment", "StageStage"],
      "Properties": {
        "Name": {"Fn::Join": ["-", ["StageApiKey", { "Fn::GetAtt": ["LanternApiGateway", "RootResourceId"] }] ]},
        "Description": "Stage Lantern API Key V1",
        "Enabled": "true",
        "StageKeys": [{
          "RestApiId": { "Ref": "LanternApiGateway" },
          "StageName": {"Ref":"StageStage"}
        }]
      }
    },
    "ProdApiKey": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": ["ProdDeployment", "ProdStage"],
      "Properties": {
        "Name": {"Fn::Join": ["-", ["ProdApiKey", { "Fn::GetAtt": ["LanternApiGateway", "RootResourceId"] }] ]},
        "Description": "Prod Lantern API Key V1",
        "Enabled": "true",
        "StageKeys": [{
          "RestApiId": { "Ref": "LanternApiGateway" },
          "StageName": {"Ref":"ProdStage"}
        }]
      }
    },
    "StageUsagePlan" : {
      "Type" : "AWS::ApiGateway::UsagePlan",
      "Properties" : {
        "ApiStages" : [ {"ApiId" : { "Ref" : "LanternApiGateway" }, "Stage" : { "Ref" : "StageStage" }} ],
        "Description" : "Stage Lantern APIGateway usage plan",
        "Quota" : {
          "Limit" : 10000,
          "Period" : "WEEK"
        },
        "Throttle" : {
          "BurstLimit" : 200,
          "RateLimit" : 100
        },
        "UsagePlanName" : {"Fn::Join": ["_", ["Stage_Lantern_API_PLAN", { "Fn::GetAtt": ["LanternApiGateway", "RootResourceId"] }] ]}
      }
    },
    "ProdUsagePlan" : {
      "Type" : "AWS::ApiGateway::UsagePlan",
      "Properties" : {
        "ApiStages" : [ {"ApiId" : { "Ref" : "LanternApiGateway" }, "Stage" : { "Ref" : "ProdStage" }} ],
        "Description" : "Prod Lantern APIGateway usage plan",
        "Quota" : {
          "Limit" : 10000,
          "Period" : "DAY"
        },
        "Throttle" : {
          "BurstLimit" : 300,
          "RateLimit" : 100
        },
        "UsagePlanName" : {"Fn::Join": ["_", ["Prod_Lantern_API_PLAN", { "Fn::GetAtt": ["LanternApiGateway", "RootResourceId"] }] ]}
      }
    },
    "StageUsagePlanKey" : {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "DependsOn": ["StageApiKey", "StageUsagePlan"],
      "Properties": {
        "KeyId" : {"Ref" : "StageApiKey"},
        "KeyType" : "API_KEY",
        "UsagePlanId" : {"Ref" : "StageUsagePlan"}
      }
    },
    "ProdUsagePlanKey" : {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "DependsOn": ["ProdApiKey", "ProdUsagePlan"],
      "Properties": {
        "KeyId" : {"Ref" : "ProdApiKey"},
        "KeyType" : "API_KEY",
        "UsagePlanId" : {"Ref" : "ProdUsagePlan"}
      }
    }
  },
  "Outputs": {
    "MainAPIID": {
      "Value": {
        "Ref": "LanternApiGateway"
      },
      "Description": "The main API gateway ID"
    },
    "StageEndpoint": {
      "Value": {"Ref": "StageOriginAPIEndpoint"},
      "Description": "Stage original application endpoint"
    },
    "StageApiKey": {
      "Value": {"Ref": "StageApiKey"},
      "Description": "Stage API Key to use"
    },
    "ProdEndpoint": {
      "Value": {"Ref": "ProdOriginAPIEndpoint"},
      "Description": "Prod original application endpoint"
    },
    "ProdApiKey": {
      "Value": {"Ref": "ProdApiKey"},
      "Description": "Prod API Key to use"
    },
    "LanternAPIGatewayName": {
      "Value": {"Ref": "LanternAPIGatewayName"},
      "Description": "Lantern API Gateway Name"
    }
  }
}
